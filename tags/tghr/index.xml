<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tghr on Angelo Stavrow</title>
    <link>https://angelostavrow.com/tags/tghr/</link>
    <description>Recent content in tghr on Angelo Stavrow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-CA</language>
    <copyright>Copyright Â© 2018, Angelo Stavrow</copyright>
    <lastBuildDate>Fri, 03 Jun 2016 12:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://angelostavrow.com/tags/tghr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TGHR: Testing the units</title>
      <link>https://angelostavrow.com/post/tghr-testing-the-units/</link>
      <pubDate>Fri, 03 Jun 2016 12:00:00 -0400</pubDate>
      
      <guid>https://angelostavrow.com/post/tghr-testing-the-units/</guid>
      <description>Earlier this week, I tweeted about my adventures in trying to add a test suite to HoneyJar.
The idea is this: I want to be sure that I&#39;m not breaking anything in the app, as it exists right now, when I start refactoring. Without an existing test suite, I have no way of knowing if I&#39;m creating any regressions.
The TDD approach is to
 Write a test that checks a particular public method against a particular condition; Write the code that makes the test pass; and Repeat steps 1 and 2 until you&#39;re done writing the method / class / app.</description>
    </item>
    
    <item>
      <title>TGHR: Opening the source</title>
      <link>https://angelostavrow.com/post/tghr-opening-the-source/</link>
      <pubDate>Sat, 28 May 2016 12:00:00 -0400</pubDate>
      
      <guid>https://angelostavrow.com/post/tghr-opening-the-source/</guid>
      <description>Last week I introduced an idea I had: to open-source my first-ever iOS app, embarrassing as it might be, and refactor it out in the open.
Over the last week, I handled the open-sourcing of the app. This took a bit more time than I expected, and normally this should be done before releasing the project to the wild, but I figured it might be interesting to see just what the process was, what I learned, and some resources I found along the way.</description>
    </item>
    
    <item>
      <title>The Great HoneyJar Refactoring</title>
      <link>https://angelostavrow.com/post/the-great-honeyjar-refactoring/</link>
      <pubDate>Fri, 20 May 2016 12:00:00 -0400</pubDate>
      
      <guid>https://angelostavrow.com/post/the-great-honeyjar-refactoring/</guid>
      <description>Over the next few weeks, I&#39;ve decided to write a series of posts about taking my first iOS app, HoneyJar, and refactoring it from its current (terrible) state into something, well, less-terrible.
And I plan on doing it in public, too.
I&#39;m calling this project The Great HoneyJar Refactoring.
HoneyJar is a future-value calculator. As explained on the product page, you set a payment amount, a rate of return, and a period of time, and HoneyJar will give you a scenario showing how your money will grow if the amount entered amount was</description>
    </item>
    
  </channel>
</rss>